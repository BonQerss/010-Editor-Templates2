//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef char bool;
typedef char s8;
typedef uchar u8;
typedef int16 s16;
typedef uint16 u16;
typedef int16 s16;
typedef int32 s32;
typedef uint32 u32;
typedef int64 s64;
typedef uint64 u64;
typedef hfloat f16;
typedef float f32;
typedef double f64;

u32 Align( u32 value, u32 alignment )
{
	return (value + (alignment - 1)) & ~(alignment - 1);
}

void FAlign( u32 alignment )
{
	FSeek( Align( FTell(), alignment ) );
}

typedef struct
{
    u8 Length;
    if ( Length > 0 )
        char Data[ Length ];
    FAlign(4);
} TString <read=TStringToString>;

string TStringToString(TString& value)
{
    if (value.Length == 0) return "<empty string>";
    return value.Data;
}

typedef u32 TBoolean;

typedef struct
{
    u32 A, R, G, B;
} TColor;

typedef struct
{
    TString Tool;
    TString Type;
    u32 ExportDate;
    u32 FieldU1;
    u32 Version;
    TString Name;
    TString Shader;
    TString Archive;
    TString FieldU3;
    u32 FieldU4;
    u32 FieldU5;
    u32 SEGA[4];
    
} TPMatBinFile;

TPMatBinFile File;