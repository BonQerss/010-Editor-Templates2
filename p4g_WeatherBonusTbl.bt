#include "p4g_enums.bt"

LittleEndian();

enum<ubyte> BonusBonus
{
    BLANK = 0,
    RandomResistSkills = 2,
    RandomResistSkills2 = 3,
    RandomEvadeSkills = 5,
    RandomSupportSkills = 6,
    RandomStatIncrease = 7,
    BonusEXP = 8,
    RandomSkillChange = 9,
    SkillObtain = 10,
};

enum<ushort> WhatIs
{
    Free = 0,
    Arcana = 1,
    Persona = 2,
    Arcana2 = 3,
    Persona2 = 4,
    BothArcana = 5,
    PersonaBoth = 6,
};

typedef struct
{
    uint FileSize;
    ushort DisplayList;
    ushort field06;
    ushort field08;
    ushort field0A;
    ushort field0C;
    ushort field0E;
} FileInfo <size=0x10, optimize=false>;

typedef struct {
    local int isArcana = (parentof(this).Isit == 1 || 
                         parentof(this).Isit == 3 || 
                         parentof(this).Isit == 5);
    union {
        ArcanaID arcana <name="Arcana">;
        PersonasID persona <name="Persona">;
    } value;
} RequirementField <read=(isArcana ? EnumToString(value.arcana) : EnumToString(value.persona))>;

typedef struct
{
    ubyte Month;
    ubyte Day;
    WhatIs Isit <name="Is it Arcana or Persona Type">;
    RequirementField PersonaFusionRequired <name="Fusion Required">;
    RequirementField PersonaFusionRequired1 <name="Fusion Required Optional">;
    BonusBonus BonusType1 <name="Bonus Type">;
    ubyte ChanceHappening <name="Chance Happening">;
    BattleSkill Skill <name="Skill Obtained">;
    BonusBonus BonusType2 <name="Bonus Type">;
    ubyte ChanceHappening1 <name="Chance Happening">;
    BattleSkill Skill1 <name="Skill Obtained">;
    BonusBonus BonusType3 <name="Bonus Type">;
    ubyte ChanceHappening2 <name="Chance Happening">;
    BattleSkill Skill2 <name="Skill Obtained">;
    ushort field14;
    ushort field16;
    ushort field18;
    ushort field1A;
} Multiplier <size=0x1C, optimize=false>;

SetBackColor(0x880000);

typedef struct {
    FileInfo Segmentinfo;
} Initialinfo <optimize=false>;

Initialinfo Initialinfo1;

typedef struct {
    FSeek(0x10);
    Multiplier List[(FileSize() - 16) / 28];
} MultiplierList <optimize=false>;

MultiplierList WeatherBonus;