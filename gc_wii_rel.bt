//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "common/include.h"

BigEndian();

typedef struct
{
    u32 id;
    u32 nextModule;
    u32 prevModule;
    u32 numSections;
    u32 sectionInfoOffset;
    u32 nameOffset;
    u32 nameSize;
    u32 version;
    u32 bssSize;
    u32 relOffset;
    u32 impOffset;
    u32 impSize;
    u8 prologSection;
    u8 epilogSection;
    u8 unresolvedSection;
    u8 bssSection;
    u32 prolog;
    u32 epilog;
    u32 unresolved;
    
    if ( version >= 2 )
    {
        u32 align;
        u32 bssAlign;
        if ( version >= 3 ) 
        {
            u32 fixSize;
        }
    }

    if ( impSize > 0 )
    {
        FSeek( impOffset );

        local u32 impIndex;
        local u32 impCount = impSize / 8;
        for ( impIndex = 0; impIndex < impCount; ++impIndex )
        {
            struct
            {
                u32 moduleId;
                u32 relOffset;
                local u32 nextRelOffset;
                if ( impIndex + 1 < impCount )
                    nextRelOffset = ReadInt( FTell() + 4 );
                else
                    nextRelOffset = FileSize();

                local u32 relCount = (nextRelOffset - relOffset) / 8;

                FPush();
                FSeek( relOffset );
                struct TRELReloc relocs[relCount];
                FPop();
            } Imp;
        }
    }
} TRELModule;

typedef struct
{
    u32 moduleId;
    u32 relOffset;
} TRELImp; 

typedef struct
{
    u16 offset;
    u8 type;
    u8 section;
    u32 symbolOffset;
} TRELReloc;

TRELModule File;